/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as ResetPasswordTokenImport } from './routes/reset-password.$token'
import { Route as AuthenticatedAdminUserRoleImport } from './routes/_authenticated/admin/user-role'
import { Route as AuthenticatedAdminRolePermissionImport } from './routes/_authenticated/admin/role-permission'
import { Route as AuthenticatedAdminRoleMenuImport } from './routes/_authenticated/admin/role-menu'
import { Route as AuthenticatedAdminApprovalStructureImport } from './routes/_authenticated/admin/approval-structure'
import { Route as AuthenticatedAdminActivityLogImport } from './routes/_authenticated/admin/activity-log'
import { Route as AuthenticatedPrdMasterFcsImport } from './routes/_authenticated/prd/master/fcs'
import { Route as AuthenticatedPrdMasterBuildingImport } from './routes/_authenticated/prd/master/building'
import { Route as AuthenticatedAdminMasterUserImport } from './routes/_authenticated/admin/master/user'
import { Route as AuthenticatedAdminMasterRoleImport } from './routes/_authenticated/admin/master/role'
import { Route as AuthenticatedAdminMasterReasonImport } from './routes/_authenticated/admin/master/reason'
import { Route as AuthenticatedAdminMasterMenuImport } from './routes/_authenticated/admin/master/menu'
import { Route as AuthenticatedAdminMasterKeyValueImport } from './routes/_authenticated/admin/master/key-value'
import { Route as AuthenticatedAdminMasterEmployeeImport } from './routes/_authenticated/admin/master/employee'
import { Route as AuthenticatedAdminMasterDepartmentImport } from './routes/_authenticated/admin/master/department'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const ResetPasswordTokenRoute = ResetPasswordTokenImport.update({
  id: '/reset-password/$token',
  path: '/reset-password/$token',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAdminUserRoleRoute = AuthenticatedAdminUserRoleImport.update(
  {
    id: '/admin/user-role',
    path: '/admin/user-role',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedAdminRolePermissionRoute =
  AuthenticatedAdminRolePermissionImport.update({
    id: '/admin/role-permission',
    path: '/admin/role-permission',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminRoleMenuRoute = AuthenticatedAdminRoleMenuImport.update(
  {
    id: '/admin/role-menu',
    path: '/admin/role-menu',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedAdminApprovalStructureRoute =
  AuthenticatedAdminApprovalStructureImport.update({
    id: '/admin/approval-structure',
    path: '/admin/approval-structure',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminActivityLogRoute =
  AuthenticatedAdminActivityLogImport.update({
    id: '/admin/activity-log',
    path: '/admin/activity-log',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPrdMasterFcsRoute = AuthenticatedPrdMasterFcsImport.update({
  id: '/prd/master/fcs',
  path: '/prd/master/fcs',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPrdMasterBuildingRoute =
  AuthenticatedPrdMasterBuildingImport.update({
    id: '/prd/master/building',
    path: '/prd/master/building',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminMasterUserRoute =
  AuthenticatedAdminMasterUserImport.update({
    id: '/admin/master/user',
    path: '/admin/master/user',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminMasterRoleRoute =
  AuthenticatedAdminMasterRoleImport.update({
    id: '/admin/master/role',
    path: '/admin/master/role',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminMasterReasonRoute =
  AuthenticatedAdminMasterReasonImport.update({
    id: '/admin/master/reason',
    path: '/admin/master/reason',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminMasterMenuRoute =
  AuthenticatedAdminMasterMenuImport.update({
    id: '/admin/master/menu',
    path: '/admin/master/menu',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminMasterKeyValueRoute =
  AuthenticatedAdminMasterKeyValueImport.update({
    id: '/admin/master/key-value',
    path: '/admin/master/key-value',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminMasterEmployeeRoute =
  AuthenticatedAdminMasterEmployeeImport.update({
    id: '/admin/master/employee',
    path: '/admin/master/employee',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminMasterDepartmentRoute =
  AuthenticatedAdminMasterDepartmentImport.update({
    id: '/admin/master/department',
    path: '/admin/master/department',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/reset-password/$token': {
      id: '/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof ResetPasswordTokenImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/activity-log': {
      id: '/_authenticated/admin/activity-log'
      path: '/admin/activity-log'
      fullPath: '/admin/activity-log'
      preLoaderRoute: typeof AuthenticatedAdminActivityLogImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/approval-structure': {
      id: '/_authenticated/admin/approval-structure'
      path: '/admin/approval-structure'
      fullPath: '/admin/approval-structure'
      preLoaderRoute: typeof AuthenticatedAdminApprovalStructureImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/role-menu': {
      id: '/_authenticated/admin/role-menu'
      path: '/admin/role-menu'
      fullPath: '/admin/role-menu'
      preLoaderRoute: typeof AuthenticatedAdminRoleMenuImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/role-permission': {
      id: '/_authenticated/admin/role-permission'
      path: '/admin/role-permission'
      fullPath: '/admin/role-permission'
      preLoaderRoute: typeof AuthenticatedAdminRolePermissionImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/user-role': {
      id: '/_authenticated/admin/user-role'
      path: '/admin/user-role'
      fullPath: '/admin/user-role'
      preLoaderRoute: typeof AuthenticatedAdminUserRoleImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/master/department': {
      id: '/_authenticated/admin/master/department'
      path: '/admin/master/department'
      fullPath: '/admin/master/department'
      preLoaderRoute: typeof AuthenticatedAdminMasterDepartmentImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/master/employee': {
      id: '/_authenticated/admin/master/employee'
      path: '/admin/master/employee'
      fullPath: '/admin/master/employee'
      preLoaderRoute: typeof AuthenticatedAdminMasterEmployeeImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/master/key-value': {
      id: '/_authenticated/admin/master/key-value'
      path: '/admin/master/key-value'
      fullPath: '/admin/master/key-value'
      preLoaderRoute: typeof AuthenticatedAdminMasterKeyValueImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/master/menu': {
      id: '/_authenticated/admin/master/menu'
      path: '/admin/master/menu'
      fullPath: '/admin/master/menu'
      preLoaderRoute: typeof AuthenticatedAdminMasterMenuImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/master/reason': {
      id: '/_authenticated/admin/master/reason'
      path: '/admin/master/reason'
      fullPath: '/admin/master/reason'
      preLoaderRoute: typeof AuthenticatedAdminMasterReasonImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/master/role': {
      id: '/_authenticated/admin/master/role'
      path: '/admin/master/role'
      fullPath: '/admin/master/role'
      preLoaderRoute: typeof AuthenticatedAdminMasterRoleImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/master/user': {
      id: '/_authenticated/admin/master/user'
      path: '/admin/master/user'
      fullPath: '/admin/master/user'
      preLoaderRoute: typeof AuthenticatedAdminMasterUserImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/prd/master/building': {
      id: '/_authenticated/prd/master/building'
      path: '/prd/master/building'
      fullPath: '/prd/master/building'
      preLoaderRoute: typeof AuthenticatedPrdMasterBuildingImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/prd/master/fcs': {
      id: '/_authenticated/prd/master/fcs'
      path: '/prd/master/fcs'
      fullPath: '/prd/master/fcs'
      preLoaderRoute: typeof AuthenticatedPrdMasterFcsImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAdminActivityLogRoute: typeof AuthenticatedAdminActivityLogRoute
  AuthenticatedAdminApprovalStructureRoute: typeof AuthenticatedAdminApprovalStructureRoute
  AuthenticatedAdminRoleMenuRoute: typeof AuthenticatedAdminRoleMenuRoute
  AuthenticatedAdminRolePermissionRoute: typeof AuthenticatedAdminRolePermissionRoute
  AuthenticatedAdminUserRoleRoute: typeof AuthenticatedAdminUserRoleRoute
  AuthenticatedAdminMasterDepartmentRoute: typeof AuthenticatedAdminMasterDepartmentRoute
  AuthenticatedAdminMasterEmployeeRoute: typeof AuthenticatedAdminMasterEmployeeRoute
  AuthenticatedAdminMasterKeyValueRoute: typeof AuthenticatedAdminMasterKeyValueRoute
  AuthenticatedAdminMasterMenuRoute: typeof AuthenticatedAdminMasterMenuRoute
  AuthenticatedAdminMasterReasonRoute: typeof AuthenticatedAdminMasterReasonRoute
  AuthenticatedAdminMasterRoleRoute: typeof AuthenticatedAdminMasterRoleRoute
  AuthenticatedAdminMasterUserRoute: typeof AuthenticatedAdminMasterUserRoute
  AuthenticatedPrdMasterBuildingRoute: typeof AuthenticatedPrdMasterBuildingRoute
  AuthenticatedPrdMasterFcsRoute: typeof AuthenticatedPrdMasterFcsRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAdminActivityLogRoute: AuthenticatedAdminActivityLogRoute,
  AuthenticatedAdminApprovalStructureRoute:
    AuthenticatedAdminApprovalStructureRoute,
  AuthenticatedAdminRoleMenuRoute: AuthenticatedAdminRoleMenuRoute,
  AuthenticatedAdminRolePermissionRoute: AuthenticatedAdminRolePermissionRoute,
  AuthenticatedAdminUserRoleRoute: AuthenticatedAdminUserRoleRoute,
  AuthenticatedAdminMasterDepartmentRoute:
    AuthenticatedAdminMasterDepartmentRoute,
  AuthenticatedAdminMasterEmployeeRoute: AuthenticatedAdminMasterEmployeeRoute,
  AuthenticatedAdminMasterKeyValueRoute: AuthenticatedAdminMasterKeyValueRoute,
  AuthenticatedAdminMasterMenuRoute: AuthenticatedAdminMasterMenuRoute,
  AuthenticatedAdminMasterReasonRoute: AuthenticatedAdminMasterReasonRoute,
  AuthenticatedAdminMasterRoleRoute: AuthenticatedAdminMasterRoleRoute,
  AuthenticatedAdminMasterUserRoute: AuthenticatedAdminMasterUserRoute,
  AuthenticatedPrdMasterBuildingRoute: AuthenticatedPrdMasterBuildingRoute,
  AuthenticatedPrdMasterFcsRoute: AuthenticatedPrdMasterFcsRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/reset-password/$token': typeof ResetPasswordTokenRoute
  '/': typeof AuthenticatedIndexRoute
  '/admin/activity-log': typeof AuthenticatedAdminActivityLogRoute
  '/admin/approval-structure': typeof AuthenticatedAdminApprovalStructureRoute
  '/admin/role-menu': typeof AuthenticatedAdminRoleMenuRoute
  '/admin/role-permission': typeof AuthenticatedAdminRolePermissionRoute
  '/admin/user-role': typeof AuthenticatedAdminUserRoleRoute
  '/admin/master/department': typeof AuthenticatedAdminMasterDepartmentRoute
  '/admin/master/employee': typeof AuthenticatedAdminMasterEmployeeRoute
  '/admin/master/key-value': typeof AuthenticatedAdminMasterKeyValueRoute
  '/admin/master/menu': typeof AuthenticatedAdminMasterMenuRoute
  '/admin/master/reason': typeof AuthenticatedAdminMasterReasonRoute
  '/admin/master/role': typeof AuthenticatedAdminMasterRoleRoute
  '/admin/master/user': typeof AuthenticatedAdminMasterUserRoute
  '/prd/master/building': typeof AuthenticatedPrdMasterBuildingRoute
  '/prd/master/fcs': typeof AuthenticatedPrdMasterFcsRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/reset-password/$token': typeof ResetPasswordTokenRoute
  '/': typeof AuthenticatedIndexRoute
  '/admin/activity-log': typeof AuthenticatedAdminActivityLogRoute
  '/admin/approval-structure': typeof AuthenticatedAdminApprovalStructureRoute
  '/admin/role-menu': typeof AuthenticatedAdminRoleMenuRoute
  '/admin/role-permission': typeof AuthenticatedAdminRolePermissionRoute
  '/admin/user-role': typeof AuthenticatedAdminUserRoleRoute
  '/admin/master/department': typeof AuthenticatedAdminMasterDepartmentRoute
  '/admin/master/employee': typeof AuthenticatedAdminMasterEmployeeRoute
  '/admin/master/key-value': typeof AuthenticatedAdminMasterKeyValueRoute
  '/admin/master/menu': typeof AuthenticatedAdminMasterMenuRoute
  '/admin/master/reason': typeof AuthenticatedAdminMasterReasonRoute
  '/admin/master/role': typeof AuthenticatedAdminMasterRoleRoute
  '/admin/master/user': typeof AuthenticatedAdminMasterUserRoute
  '/prd/master/building': typeof AuthenticatedPrdMasterBuildingRoute
  '/prd/master/fcs': typeof AuthenticatedPrdMasterFcsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/reset-password/$token': typeof ResetPasswordTokenRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/admin/activity-log': typeof AuthenticatedAdminActivityLogRoute
  '/_authenticated/admin/approval-structure': typeof AuthenticatedAdminApprovalStructureRoute
  '/_authenticated/admin/role-menu': typeof AuthenticatedAdminRoleMenuRoute
  '/_authenticated/admin/role-permission': typeof AuthenticatedAdminRolePermissionRoute
  '/_authenticated/admin/user-role': typeof AuthenticatedAdminUserRoleRoute
  '/_authenticated/admin/master/department': typeof AuthenticatedAdminMasterDepartmentRoute
  '/_authenticated/admin/master/employee': typeof AuthenticatedAdminMasterEmployeeRoute
  '/_authenticated/admin/master/key-value': typeof AuthenticatedAdminMasterKeyValueRoute
  '/_authenticated/admin/master/menu': typeof AuthenticatedAdminMasterMenuRoute
  '/_authenticated/admin/master/reason': typeof AuthenticatedAdminMasterReasonRoute
  '/_authenticated/admin/master/role': typeof AuthenticatedAdminMasterRoleRoute
  '/_authenticated/admin/master/user': typeof AuthenticatedAdminMasterUserRoute
  '/_authenticated/prd/master/building': typeof AuthenticatedPrdMasterBuildingRoute
  '/_authenticated/prd/master/fcs': typeof AuthenticatedPrdMasterFcsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/reset-password/$token'
    | '/'
    | '/admin/activity-log'
    | '/admin/approval-structure'
    | '/admin/role-menu'
    | '/admin/role-permission'
    | '/admin/user-role'
    | '/admin/master/department'
    | '/admin/master/employee'
    | '/admin/master/key-value'
    | '/admin/master/menu'
    | '/admin/master/reason'
    | '/admin/master/role'
    | '/admin/master/user'
    | '/prd/master/building'
    | '/prd/master/fcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/reset-password/$token'
    | '/'
    | '/admin/activity-log'
    | '/admin/approval-structure'
    | '/admin/role-menu'
    | '/admin/role-permission'
    | '/admin/user-role'
    | '/admin/master/department'
    | '/admin/master/employee'
    | '/admin/master/key-value'
    | '/admin/master/menu'
    | '/admin/master/reason'
    | '/admin/master/role'
    | '/admin/master/user'
    | '/prd/master/building'
    | '/prd/master/fcs'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/reset-password/$token'
    | '/_authenticated/'
    | '/_authenticated/admin/activity-log'
    | '/_authenticated/admin/approval-structure'
    | '/_authenticated/admin/role-menu'
    | '/_authenticated/admin/role-permission'
    | '/_authenticated/admin/user-role'
    | '/_authenticated/admin/master/department'
    | '/_authenticated/admin/master/employee'
    | '/_authenticated/admin/master/key-value'
    | '/_authenticated/admin/master/menu'
    | '/_authenticated/admin/master/reason'
    | '/_authenticated/admin/master/role'
    | '/_authenticated/admin/master/user'
    | '/_authenticated/prd/master/building'
    | '/_authenticated/prd/master/fcs'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  ResetPasswordTokenRoute: typeof ResetPasswordTokenRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  ResetPasswordTokenRoute: ResetPasswordTokenRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/reset-password/$token"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/admin/activity-log",
        "/_authenticated/admin/approval-structure",
        "/_authenticated/admin/role-menu",
        "/_authenticated/admin/role-permission",
        "/_authenticated/admin/user-role",
        "/_authenticated/admin/master/department",
        "/_authenticated/admin/master/employee",
        "/_authenticated/admin/master/key-value",
        "/_authenticated/admin/master/menu",
        "/_authenticated/admin/master/reason",
        "/_authenticated/admin/master/role",
        "/_authenticated/admin/master/user",
        "/_authenticated/prd/master/building",
        "/_authenticated/prd/master/fcs"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/reset-password/$token": {
      "filePath": "reset-password.$token.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/activity-log": {
      "filePath": "_authenticated/admin/activity-log.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/approval-structure": {
      "filePath": "_authenticated/admin/approval-structure.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/role-menu": {
      "filePath": "_authenticated/admin/role-menu.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/role-permission": {
      "filePath": "_authenticated/admin/role-permission.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/user-role": {
      "filePath": "_authenticated/admin/user-role.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/master/department": {
      "filePath": "_authenticated/admin/master/department.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/master/employee": {
      "filePath": "_authenticated/admin/master/employee.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/master/key-value": {
      "filePath": "_authenticated/admin/master/key-value.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/master/menu": {
      "filePath": "_authenticated/admin/master/menu.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/master/reason": {
      "filePath": "_authenticated/admin/master/reason.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/master/role": {
      "filePath": "_authenticated/admin/master/role.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/master/user": {
      "filePath": "_authenticated/admin/master/user.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/prd/master/building": {
      "filePath": "_authenticated/prd/master/building.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/prd/master/fcs": {
      "filePath": "_authenticated/prd/master/fcs.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
